os.pullEvent = os.pullEventRaw


function splashscreen()
term.setBackgroundColor(colors.blue)
print("                                                   ")
print("                                                   ")
print("                                                   ")
print("                                                   ")
print("                                                   ")
print("     #    #  #      #   #####   #  #   #     #     ")
print("     #    #  #      #  #        #  #   #     #     ")
print("     #    #  #      #  #        # #    #     #     ")
print("     ######  #      #   ####    ##      #####      ")
print("     #    #   #    #        #   # #       #        ")
print("     #    #    ####    #####    #  #      #        ")
print("                                                   ")
print("                                                   ")
print("                                                   ")
print("                                                   ")
print("                                                   ")
print("                          *Boot options disabled*  ")
print("                                                   ")
sleep(4)
shell.run("clear")
booting()

end

function nothing()
while os.pullEvent("key") == nil do
  if os.pullEvent("key") == 66 then
  term.setBackgroundColor(colors.blue)
  print("                                                   ")
print("                                                   ")
print("                                                   ")
print("                                                   ")
print("                                                   ")
print("     #    #  #      #   #####   #  #   #     #     ")
print("     #    #  #      #  #        #  #   #     #     ")
print("     #    #  #      #  #        # #    #     #     ")
print("     ######  #      #   ####    ##      #####      ")
print("     #    #   #    #        #   # #       #        ")
print("     #    #    ####    #####    #  #      #        ")
print("                                                   ")
print("                                                   ")
print("                                                   ")
print("                                                   ")
print("                       Entering Boot Menu...       ")
print("                                                   ")
print("                                                   ")
  sleep(3)
        shell.run("Bootmenu")
       
  elseif os.pullEvent("key") == 60 then
        shell.run("BiOs")
        end
end
end
 

 
 
 function booting()
term.setBackgroundColor(colors.black)
term.clear()
print("                                                   ")
print("                                                   ")
print("                                                   ")
print("                                                   ")
print("                                                   ")
print("     #    #  #      #   #####   #  #   #     #     ")
print("     #    #  #      #  #        #  #   #     #     ")
print("     #    #  #      #  #        # #    #     #     ")
print("     ######  #      #   ####    ##      #####      ")
print("     #    #   #    #        #   # #       #        ")
print("     #    #    ####    #####    #  #      #        ")
print("                                                   ")
print("                                                   ")
print("                                                   ")
print("                                                   ")
print("                                                   ")
print("                                                   ")
print("                                  booting...       ")
sleep(1)
shell.run("clear")
term.clear()
shell.run("/.sys/etc/bootmgr.run")
end



function waitForKey()

        local sEvent, param = os.pullEvent("key")
        if sEvent == "key" then
            if param == 88 then
			os.run( {} ,"/.sys/etc/bootsettings.ing")
			else
			print("ERROR!")
			sleep(200)
	end
	end


end

term.setTextColor(colors.white)
term.clear()
term.setCursorPos(1,1)
sleep(1)
print("_")
sleep(0.1)
term.clear()
term.setCursorPos(1,1)
print(" ")
sleep(0.1)
term.clear()
term.setCursorPos(1,1)
print("_")
sleep(0.1)
term.clear()
term.setCursorPos(1,1)
print(" ")
sleep(0.1)
term.clear()
sleep(1)
print("HUSKYBIOS(C) 2014 Husky Tec. -Server Edition-")
term.setCursorPos(1, 19)
print("(C) HUSKY TEC.")
term.setCursorPos(1, 20)
term.setCursorPos(1,2)
sleep(1)
print("_")
sleep(0.1)
term.setCursorPos(1,2)
print(" ")
sleep(0.1)
term.setCursorPos(1,2)
print("_")
sleep(0.1)
term.setCursorPos(1,2)
print(" ")
sleep(0.1)
print("")
term.setCursorPos(1,2)
print("_")
sleep(0.1)
term.setCursorPos(1,2)
print(" ")
sleep(0.1)
term.setCursorPos(1,2)
print("_")
sleep(0.1)
term.setCursorPos(1,2)
print(" ")
print("_")
sleep(0.1)
term.setCursorPos(1,2)
print(" ")
sleep(0.1)
print("")
term.setCursorPos(1,2)
print("_")
sleep(0.1)
term.setCursorPos(1,2)
print(" ")
sleep(0.1)
term.setCursorPos(1,2)
print("_")
sleep(0.1)
term.setCursorPos(1,2)
print(" ")
sleep(0.1)
sleep(0.4)
print("BIOS Date: 01/24/14 13:34:14 Ver:01.00.20")
print("ComputerCraft X664 PC    CPU Power = 0.8Watts")
print("Poduct Serial Number: -UNKNOWN-")
print("")
print("CPU : CCP (R) ATOMIC(R) CPU X5563 @ 0.13GHz")
print(" Speed : 0.13 GHz     Count : 16")
print("")
print("")
sleep(1)
term.setCursorPos(1,11)
print("Initializing Controllers.")
sleep(1)
term.setCursorPos(1,11)
print("Initializing Controllers..")
sleep(1)
term.setCursorPos(1,11)
print("Initializing Controllers...")
sleep(1)
term.setCursorPos(1,11)
print("Controller 'CCDisk265KB' found!")
sleep(3)
print("")
print("Booting from hard drive...")
print("_")
sleep(0.1)
term.setCursorPos(1,14)
print(" ")
sleep(0.1)
term.setCursorPos(1,14)
print("_")
sleep(0.1)
term.setCursorPos(1,14)
print(" ")
sleep(0.1)
term.setCursorPos(1,14)
print("_")
sleep(0.1)
term.setCursorPos(1,14)
print(" ")
sleep(0.1)
term.setCursorPos(1,14)
print("_")
sleep(0.1)
term.setCursorPos(1,14)
print(" ")
sleep(0.1)
term.setCursorPos(1,14)
print("_")
sleep(0.1)
term.setCursorPos(1,14)
print(" ")
sleep(0.1)
term.setCursorPos(1,14)
print("_")
sleep(0.1)
term.setCursorPos(1,14)
print(" ")
sleep(0.1)
term.setCursorPos(1,14)
print("_")
sleep(2)
if fs.exists("/.sys/etc/bootmgr.run") == false then

term.clear()
term.setCursorPos(1,1)
print("BOOTMRG MISSING!")
print("Hold STRG+R to reboot")
while true do
term.setCursorBlink(true)
sleep(1)
term.setCursorBlink(false)
sleep(1)
end

else
local isAdvanced = term.isColor and term.isColor()
if isAdvanced then
term.clear()
sleep(1)
splashscreen()
else
        term.clear()
        sleep(1)
        term.setCursorPos(15, 1)
        print("[GLOBAL STARTUP ERROR]")
        print("")
    print("Sorry, but this version of HuskyOS-Server is only available for Advanced Computers or you installed the wrong version...")
        print("")
        print("You can download the newest version from http://huskyos.schwazis.net")
        term.setCursorPos(20, 18)
        print("Error-Code: term_NO_Advanced_PC")
        sleep(15)
        os.shutdown()
end

end

local ok, err2 = pcall(main)
local err = err2 or ""
local w,h = term.getSize()
local Version = "1.1.2-BETA"
if not ok then

term.clear()
term.setCursorPos(math.floor(w-string.len("[Error]"))/2, 2)
print("[Error]")
term.setCursorPos(2,4)
print("The HuskyOS bootloader detected an error in an\n                     system-file:")
term.setCursorPos(math.floor(w-string.len(err))/2, 7)
print(err)
term.setCursorPos(math.floor(w-string.len("Is HuskyOS up-to-date?"))/2, 9)
print("Is HuskyOS up-to-date?")
   os.pullEvent("key")
   os.reboot()
end